{"version":3,"sources":["hooks/useFetch.js","components/Loading/Loading.jsx","utils/constants.js","components/SliderMovies/SliderMovies.jsx","components/ListMovies/ListMovies.jsx","pages/home.jsx","assets/13236.jpg","pages/error404.jsx","components/CardsMovies/CardsMovies.jsx","pages/popular.jsx","pages/search.jsx","components/ModalVideo/ModalVideo.jsx","pages/movie/movie.jsx","pages/new_movies.jsx","assets/popcorn_m.png","components/MenuTop/MenuTop.jsx","components/Footer/Footer.jsx","App.js","index.js"],"names":["useFetch","url","options","useState","loading","setLoading","result","setResult","error","setError","useEffect","a","fetch","resp","json","fetchData","Loading","className","size","URL_API","API_KEY","IMAGE_PATH","Movie","movie","id","backdropPath","backdrop_path","title","overview","style","backgroundImage","to","type","SliderMovies","moviesData","results","autoplay","map","RenderMovie","posterPath","poster_path","Item","Meta","avatar","src","shape","icon","PlusOutlined","ListMovies","header","bordered","dataSource","renderItem","Home","urlNewMovies","popularNewMovies","recommendedNewMovies","newMoviesData","popularMoviesData","recommendedMoviesData","xs","sm","md","Title","Typography","Error404","errorImg","alt","Card","MovieCard","hoverable","width","cover","actions","PlusCircleOutlined","CardsMovies","page","setPage","movies","setMovies","totalPages","setTotalPages","urlWithPagination","response","moviesObj","total_pages","fetchMovies","undefined","onChange","currentPage","total","hideOnSinglePage","Popular","Search","currentSearch","setCurrentSearch","setUrl","setTimeout","prefix","SearchOutlined","placeholder","input","target","value","ModalVideo","videoKey","videoPlatform","isOpen","close","urlVideo","setUrlVideo","visible","centered","onCancel","footer","controls","muted","movieData","videoData","offset","image","PosterMovie","InfoMovie","release_date","genres","key","site","isVisibleModal","setIsVisibleModal","openModal","closeModal","moment","format","PlaySquareOutlined","onClick","renderVideo","genre","name","useParams","urlData","movieVideo","length","NewMovies","MenuTop","logo","theme","mode","defaultSelectedKeys","lineHeight","Footer","Layout","App","Header","Content","zIndex","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8ZAyBeA,EAvBE,SAACC,EAAKC,GACnB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAgBA,OAdAC,qBAAU,YACS,uCAAG,8BAAAC,EAAA,+EAESC,MAAMX,EAAKC,GAFpB,cAEJW,EAFI,gBAGSA,EAAKC,OAHd,OAGJA,EAHI,OAIVP,EAAUO,GACVT,GAAW,GALD,kDAOVI,EAAS,EAAD,IACRJ,GAAW,GARD,0DAAH,qDAWfU,KACD,CAACd,EAAKC,IACF,CAACE,UAASE,SAAQE,U,iDCTdQ,EATC,WACd,OACC,sBAAKC,UAAU,UAAf,UACE,0CACA,cAAC,IAAD,CAAMC,KAAK,cCPHC,EAAU,+BACVC,EAAU,4CACVC,EAAa,sCC4BpBC,EAAO,SAAC,GAAgE,IAAD,IAA9DC,MAAQC,EAAsD,EAAtDA,GAAmBC,EAAmC,EAAlDC,cAA6BC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC7D,OAAS,qBACPX,UAAU,gBACVY,MAAO,CAACC,gBAAgB,QAAD,OAAUT,EAAaI,EAAvB,OAFhB,SAIP,qBAAKR,UAAU,iCAAf,SACE,gCACE,6BAAKU,IACL,4BAAIC,IACJ,cAAC,IAAD,CAAMG,GAAE,iBAAYP,GAApB,SACE,cAAC,IAAD,CAAQQ,KAAK,UAAb,mCAOKC,EArCM,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACrB,GAAGA,EAAW9B,UAAY8B,EAAW5B,OACnC,OAAO,cAAC,EAAD,IAGT,IAAO6B,EAAWD,EAAW5B,OAAtB6B,QACP,OACE,gCACE,cAAC,IAAD,CAAUC,UAAQ,EAAlB,SACGD,EAAQE,KAAI,SAAAd,GAAK,OAChB,cAAC,EAAD,CAAOA,MAAOA,GAAYA,EAAMC,SAHtC,Q,oCCSEc,EAAc,SAAC,GAAuD,IAAD,IAApDf,MAASC,EAA2C,EAA3CA,GAAIG,EAAuC,EAAvCA,MAAoBY,EAAmB,EAAhCC,YACzC,OACE,eAAC,IAAKC,KAAN,CAAWxB,UAAU,aAArB,UACE,cAAC,IAAKwB,KAAKC,KAAX,CACEC,OACE,cAAC,IAAD,CAAQC,IAAG,UAAKvB,EAAakB,KAE/BZ,MAAO,cAAC,IAAD,CAAMI,GAAE,iBAAYP,GAApB,SAA2BG,MAEpC,cAAC,IAAD,CAAMI,GAAE,iBAAYP,GAApB,SACE,cAAC,IAAD,CAAQQ,KAAK,UAAUa,MAAM,SAASC,KAAM,cAACC,EAAA,EAAD,YAMrCC,EAjCI,SAAC,GAA2B,IAAzBrB,EAAwB,EAAxBA,MAAOO,EAAiB,EAAjBA,WAC3B,OAAIA,EAAWlB,UAAYkB,EAAW5B,OAC7B,cAAC,EAAD,IAIP,cAAC,IAAD,CACEW,UAAU,OACVC,KAAK,UACL+B,OAAQ,6BAAKtB,IACbuB,UAAQ,EACRC,WAAYjB,EAAW5B,OAAO6B,QAC9BiB,WAAY,SAAC7B,GAAD,OAAW,cAAC,EAAD,CAAaA,MAAOA,Q,gBCgBlC8B,EA7BF,WACX,IAAMC,EAAY,UAAMnC,EAAN,6BAAkCC,EAAlC,0BACZmC,EAAgB,UAAMpC,EAAN,yBAA8BC,EAA9B,0BAChBoC,EAAoB,UAAMrC,EAAN,2BAAgCC,EAAhC,0BACpBqC,EAAgBzD,EAASsD,GACzBI,EAAoB1D,EAASuD,GAC7BI,EAAwB3D,EAASwD,GAEvC,OACE,gCACE,cAAC,EAAD,CAActB,WAAYuB,IAC1B,eAAC,IAAD,WACE,cAAC,IAAD,CAAKG,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACE,cAAC,EAAD,CACEnC,MAAM,sBACNO,WAAYwB,MAGhB,cAAC,IAAD,CAAKE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACE,cAAC,EAAD,CACEnC,MAAM,2BACNO,WAAYyB,a,SC7BT,G,MAAA,IAA0B,mCCIjCI,EAAUC,IAAVD,MAcOE,EAZE,WACf,OACE,sBAAKhD,UAAU,kBAAf,UACE,cAAC8C,EAAD,CAAO9C,UAAU,UAAjB,uBACA,iCACE,qBAAK2B,IAAKsB,EAAUC,IAAI,gC,oCCHxBzB,EAAS0B,IAAT1B,KA2CF2B,EAAY,SAAC,GAAD,QAAG9C,MAASC,EAAZ,EAAYA,GAAIG,EAAhB,EAAgBA,MAAOa,EAAvB,EAAuBA,YAAvB,OAChB,cAAC,IAAD,CAAMT,GAAE,iBAAYP,GAApB,SACE,cAAC,IAAD,CACE8C,WAAS,EACTzC,MAAO,CAAE0C,MAAO,KAChBtD,UAAU,OACVuD,MAAO,qBAAKL,IAAI,UAAUvB,IAAG,UAAKvB,GAAL,OAAkBmB,KAC/CiC,QAAS,CAAC,cAACC,EAAA,EAAD,CAAoBzD,UAAU,UAAa,SALvD,SAOE,cAACyB,EAAD,CAAMf,MAAOA,SAKJgD,EAvDK,SAAC,GAAa,IAAX1E,EAAU,EAAVA,IACrB,EAAwBE,mBAAS,GAAjC,mBAAOyE,EAAP,KAAaC,EAAb,KACA,EAA4B1E,mBAAS,IAArC,mBAAO2E,EAAP,KAAeC,EAAf,KACA,EAAoC5E,mBAAS,GAA7C,mBAAO6E,EAAP,KAAmBC,EAAnB,KAEAvE,qBAAU,YACS,uCAAG,gCAAAC,EAAA,6DACZuE,EADY,UACWjF,EADX,iBACuB2E,GADvB,SAEKhE,MAAMsE,GAFX,cAEZC,EAFY,gBAGMA,EAASrE,OAHf,OAGZsE,EAHY,OAIlBH,EAAcG,EAAUC,aACxBN,EAAUK,EAAUjD,SALF,2CAAH,qDAOjBmD,KACC,CAACV,EAAM3E,IAMV,YAAesF,IAAXT,EACK,cAAC,EAAD,IAGP,0BAAS7D,UAAU,gBAAnB,UACG6D,EAAOzC,KAAI,SAACd,GAAD,OACV,cAAC,EAAD,CAAWA,MAAOA,GAAYA,EAAMC,OAEtC,sBAAKP,UAAU,YAAf,UACE,cAAC,IAAD,CACEuE,SAdgB,SAACZ,GACvBC,EAAQD,IAcFa,YAAab,EACbc,MAAOV,EACPW,kBAAkB,IAEpB,8BCzCA5B,EAAUC,IAAVD,MAaO6B,EAVC,WACd,IAAM3F,EAAG,UAAMkB,EAAN,yBAA8BC,EAA9B,mBACT,OACE,sBAAKH,UAAU,OAAf,UACE,cAAC,EAAD,CAAOA,UAAU,UAAjB,oCACA,cAAC,EAAD,CAAahB,IAAKA,Q,kBCNhB8D,EAAUC,IAAVD,MA+BO8B,EA7BA,WACb,MAA0C1F,mBAAS,IAAnD,mBAAO2F,EAAP,KAAsBC,EAAtB,KACA,EAAsB5F,mBAAS,IAA/B,mBAAOF,EAAP,KAAY+F,EAAZ,KAEAtF,qBAAU,WACRuF,YAAW,WACa,KAAlBH,GACFE,EAAO,GAAD,OAAI7E,EAAJ,wBAA2BC,EAA3B,iCAA2D0E,MAElE,OACF,CAACA,IAIJ,OACE,sBAAK7E,UAAU,OAAf,UACE,cAAC,EAAD,CAAOA,UAAU,UAAjB,mCACA,cAAC,IAAD,CACEiF,OAAQ,cAACC,EAAA,EAAD,IACRC,YAAY,uBACZZ,SARkB,SAACa,GAAD,OAAWN,EAAiBM,EAAMC,OAAOC,QAS3DtF,UAAU,eACVC,KAAK,UAEP,cAAC,EAAD,CAAajB,IAAKA,Q,gECITuG,I,OA3BI,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACrD,EAAgCzG,mBAAS,MAAzC,mBAAO0G,EAAP,KAAiBC,EAAjB,KAaA,OAZApG,qBAAU,WACR,OAAQgG,GACN,IAAK,UACHI,EAAY,oBAAD,OAAqBL,IAChC,MACF,IAAK,QACHK,EAAY,qBAAD,OAAsBL,OAKpC,CAACC,EAAeD,IAEjB,cAAC,IAAD,CACExF,UAAU,cACV8F,QAASJ,EACTK,UAAQ,EACRC,SAAUL,EACVM,QAAQ,EALV,SAOE,cAAC,KAAD,CAAajH,IAAK4G,EAAUM,UAAQ,EAACC,OAAK,QCO1C9E,GAAc,SAAC,GAAD,IAAgBhC,EAAhB,EAAG+G,UAAa/G,OAAUgH,EAA1B,EAA0BA,UAA1B,OAClB,qBACErG,UAAU,QACVY,MAAO,CAAEC,gBAAgB,QAAD,OAAUT,EAAaf,EAAOoB,cAA9B,OAF1B,SAKI,eAAC,IAAD,CAAKT,UAAU,cAAf,UACE,cAAC,IAAD,CAAK2C,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGyD,OAAQ,EAAGtG,UAAU,gBAAjD,SACE,cAAC,GAAD,CAAauG,MAAOnG,EAAaf,EAAOkC,gBAE1C,cAAC,IAAD,CAAKoB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI7C,UAAU,cAAvC,SACE,cAAC,GAAD,CAAWX,OAAQA,EAAQgH,UAAWA,YAM1CG,GAAc,SAAC,GAAD,IAAGD,EAAH,EAAGA,MAAH,OAClB,qBAAK3F,MAAO,CAAEC,gBAAgB,QAAD,OAAU0F,EAAV,UAGzBE,GAAY,SAAC,GAGZ,IAAD,IAFJpH,OAAUqB,EAEN,EAFMA,MAAOgG,EAEb,EAFaA,aAAcC,EAE3B,EAF2BA,OAAQhG,EAEnC,EAFmCA,SAEnC,IADJ0F,UAAaO,EACT,EADSA,IAAKC,EACd,EADcA,KAElB,EAA4C3H,oBAAS,GAArD,mBAAO4H,EAAP,KAAuBC,EAAvB,KACMC,EAAY,kBAAMD,GAAkB,IACpCE,EAAa,kBAAMF,GAAkB,IAwB3C,OACE,sBAAK/G,UAAU,OAAf,UACE,gCACE,qBAAIA,UAAU,kBAAd,UACGU,EACD,uCAAUwG,IAAOR,EAAc,cAAcS,OAAO,cA3BxC,WAClB,GAAIP,GAAOC,EACT,OACE,gCACE,cAAC,IAAD,CACE7G,UAAU,eACVe,KAAK,UACLc,KAAM,cAACuF,EAAA,EAAD,IACNC,QAASL,EAJX,yBAQA,cAAC,GAAD,CACExB,SAAUoB,EACVnB,cAAeoB,EACfnB,OAAQoB,EACRnB,MAAOsB,OAaVK,MAEH,gCACE,oBAAItH,UAAU,iBAAd,qBACA,mBAAGA,UAAU,oBAAb,SAAkCW,IAClC,oBAAIX,UAAU,iBAAd,qBACA,oBAAIA,UAAU,eAAd,SACG2G,EAAOvF,KAAI,SAACmG,GAAD,OACV,6BAAoBA,EAAMC,MAAjBD,EAAMhH,gBAQZF,GAlGD,WACZ,IAAQE,EAAOkH,cAAPlH,GACFmH,EAAO,UAAMxH,EAAN,kBAAuBK,GAAvB,OAA4BJ,EAA5B,mBACPyF,EAAQ,UAAM1F,EAAN,kBAAuBK,EAAvB,kBAAmCJ,EAAnC,mBACRiG,EAAYrH,EAAS2I,GACrBC,EAAa5I,EAAS6G,GAE5B,GAAIQ,EAAUjH,UAAYiH,EAAU/G,SAAWsI,EAAWtI,OACxD,OAAO,cAAC,EAAD,IAET,GAAIsI,EAAWtI,OAAO6B,QAAQ0G,OAAS,EAAG,CACxC,IAEcvB,EAFd,YAIIsB,EAHFtI,OACE6B,QAFJ,MAKA,OAAO,cAAC,GAAD,CAAakF,UAAWA,EAAWC,UAAWA,IAErD,OACE,oBAAIrG,UAAU,kBAAd,sDC5BE8C,GAAUC,IAAVD,MAYO+E,GAVG,WAChB,IAAM7I,EAAG,UAAMkB,EAAN,6BAAkCC,EAAlC,mBACT,OACE,sBAAKH,UAAU,OAAf,UACE,cAAC,GAAD,CAAOA,UAAU,UAAjB,qCACA,cAAC,EAAD,CAAahB,IAAKA,Q,mBCZT,OAA0B,sCCkC1B8I,GA7BC,WACd,OACE,sBAAK9H,UAAU,WAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAK2B,IAAKoG,GAAM7E,IAAI,cAEtB,eAAC,KAAD,CACE8E,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAAC,KACtBtH,MAAO,CAACuH,WAAW,QAJrB,UAMI,cAAC,KAAK3G,KAAN,CAAmBxB,UAAU,iBAA7B,SACI,cAAC,IAAD,CAAMc,GAAG,cAAT,mBADW,KAGf,cAAC,KAAKU,KAAN,CAAmBxB,UAAU,iBAA7B,SACI,cAAC,IAAD,CAAMc,GAAG,cAAT,kCADW,KAGf,cAAC,KAAKU,KAAN,CAAmBxB,UAAU,iBAA7B,SACI,cAAC,IAAD,CAAMc,GAAG,WAAT,+BADW,KAGf,cAAC,KAAKU,KAAN,CAAmBxB,UAAU,iBAA7B,SACI,cAAC,IAAD,CAAMc,GAAG,UAAT,qBADW,YCfVsH,I,OARA,WACb,IAAQA,EAAWC,IAAXD,OAER,OAAQ,cAACA,EAAD,CAAQpI,UAAU,SAAlB,SACN,mGCiCWsI,GAxBH,WACV,IAAQC,EAAoBF,IAApBE,OAAQC,EAAYH,IAAZG,QAChB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAQxI,UAAU,iBAAlB,UACE,cAACuI,EAAD,CAAQ3H,MAAO,CAAC6H,OAAQ,KAAxB,SACE,cAAC,GAAD,MAEF,cAACD,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,cAAcC,UAAWxG,IAC3C,cAAC,IAAD,CAAOsG,OAAK,EAACC,KAAK,UAAUC,UAAWhE,IACvC,cAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,WAAWC,UAAWjE,IACxC,cAAC,IAAD,CAAO+D,OAAK,EAACC,KAAK,cAAcC,UAAWf,KAC3C,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,aAAaC,UAAWvI,KAC1C,cAAC,IAAD,CAAOsI,KAAK,IAAIC,UAAW5F,SAG/B,cAAC,GAAD,CAAQpC,MAAO,CAAC6H,OAAQ,aC5BhCI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.302083b9.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = (url, options) =>{\n    const [loading, setLoading] = useState(true);\n    const [result, setResult] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () =>{\n            try{\n                const resp = await fetch(url, options);\n                const json = await resp.json();\n                setResult(json);\n                setLoading(false)\n            }catch(err){\n                setError(err);\n                setLoading(false);\n            }\n        }\n        fetchData();\n    }, [url, options]);\n    return {loading, result, error};\n}\n\n\nexport default useFetch;","import \"./Loading.sass\";\nimport { Spin } from \"antd\";\n\nconst Loading = () => {\n  return (\n   <div className=\"loading\">\n     <h4>Cargando</h4>\n     <Spin size=\"large\" />\n   </div>\n  );\n};\n\nexport default Loading;\n\n","export const URL_API = 'https://api.themoviedb.org/3';\nexport const API_KEY = '?api_key=ffd88bf18591098eaa0d8f3ecc4da9a7';\nexport const IMAGE_PATH = 'https://image.tmdb.org/t/p/original';\n","// Imports from dependencie\nimport { Carousel, Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\n// Internal imports\nimport \"./SliderMovies.sass\";\nimport Loading from \"../Loading\";\nimport { IMAGE_PATH } from \"../../utils/constants\";\n\n\nconst SliderMovies = ({moviesData}) => {\n  if(moviesData.loading || !moviesData.result){\n    return <Loading />\n  }\n\n  const {results} = moviesData.result;\n  return (\n    <div>\n      <Carousel autoplay >\n        {results.map(movie =>(\n          <Movie movie={movie} key={movie.id} />\n        ))\n        \n        }\n      </Carousel>\n      ,\n    </div>\n  );\n};\n\nconst Movie= ({movie: {id, backdrop_path: backdropPath, title, overview}}) =>{\n  return ( <div\n    className=\"slider__movie\"\n    style={{backgroundImage: `url(\"${IMAGE_PATH + backdropPath}\")`}}\n  >\n    <div className=\"slider__movie-data            \">\n      <div>\n        <h2>{title}</h2>\n        <p>{overview}</p>\n        <Link to={`/movie/${id}`}>\n          <Button type=\"primary\">Ver mas... </Button>\n        </Link>\n      </div>\n    </div>\n  </div>)\n}\n\nexport default SliderMovies;\n","import \"./ListMovies.sass\";\nimport Loading from \"../Loading\";\nimport { IMAGE_PATH } from \"../../utils/constants\";\n\n\nimport { Link } from \"react-router-dom\";\nimport { List, Avatar, Button } from \"antd\";\nimport {PlusOutlined} from '@ant-design/icons';\n\nconst ListMovies = ({ title, moviesData }) => {\n  if (moviesData.Loading || !moviesData.result) {\n    return <Loading />;\n  }\n\n  return (\n    <List\n      className=\"list\"\n      size=\"default\"\n      header={<h2>{title}</h2>}\n      bordered\n      dataSource={moviesData.result.results}\n      renderItem={(movie) => <RenderMovie movie={movie} />}\n    ></List>\n  );\n};\n\nconst RenderMovie = ({ movie: { id, title, poster_path: posterPath } }) => {\n  return (\n    <List.Item className=\"list__item\">\n      <List.Item.Meta\n        avatar={\n          <Avatar src={`${IMAGE_PATH + posterPath}`} />\n        }\n        title={<Link to={`/movie/${id}`}>{title}</Link>}\n      />\n      <Link to={`/movie/${id}`}>\n        <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\n      </Link>\n    </List.Item>\n  );\n};\n\nexport default ListMovies;\n","// Inside app imports\nimport useFetch from \"../hooks/useFetch\";\nimport SliderMovies from \"../components/SliderMovies\";\nimport ListMovies from \"../components/ListMovies\";\nimport { URL_API, API_KEY } from \"../utils/constants\";\n// Style imports\nimport { Row, Col } from \"antd\";\n\nconst Home = () => {\n  const urlNewMovies = `${URL_API}/movie/now_playing${API_KEY}&language=es-ES&page=1`;\n  const popularNewMovies = `${URL_API}/movie/popular${API_KEY}&language=es-ES&page=1`;\n  const recommendedNewMovies = `${URL_API}/movie/top_rated${API_KEY}&language=es-ES&page=1`;\n  const newMoviesData = useFetch(urlNewMovies);\n  const popularMoviesData = useFetch(popularNewMovies);\n  const recommendedMoviesData = useFetch(recommendedNewMovies);\n\n  return (\n    <div>\n      <SliderMovies moviesData={newMoviesData} />\n      <Row>\n        <Col xs={24} sm={24} md={12}>\n          <ListMovies\n            title=\"Peliculas Populares\"\n            moviesData={popularMoviesData}\n          />\n        </Col>\n        <Col xs={24} sm={24} md={12}>\n          <ListMovies\n            title=\"Peliculas Mejor Puntadas\"\n            moviesData={recommendedMoviesData}\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/13236.cf63aadc.jpg\";","import { Typography } from \"antd\";\nimport './secondary_page.sass';\nimport errorImg from '../assets/13236.jpg'\n\nconst { Title } = Typography;\n\nconst Error404 = () => {\n  return (\n    <div className=\"page error-page\">\n      <Title className=\"__title\">ERROR 404</Title>\n      <figure>\n        <img src={errorImg} alt=\"People filimg a movie\" />\n      </figure>\n\n    </div>\n  );\n}\n\nexport default Error404;\n","import \"./CardsMovies.sass\";\nimport { IMAGE_PATH } from \"../../utils/constants\";\nimport { useState, useEffect } from \"react\";\nimport { Card } from \"antd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { Pagination } from \"antd\";\nimport Loading from \"../Loading\";\nimport { Link } from \"react-router-dom\";\nconst { Meta } = Card;\n\nconst CardsMovies = ({ url }) => {\n  const [page, setPage] = useState(1);\n  const [movies, setMovies] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const urlWithPagination = `${url}&page=${page}`;\n      const response = await fetch(urlWithPagination);\n      const moviesObj = await response.json();\n      setTotalPages(moviesObj.total_pages);\n      setMovies(moviesObj.results);\n    };\n    fetchMovies();\n  }, [page, url]);\n\n  const handlePageClick = (page) => {\n    setPage(page);\n  };\n\n  if (movies === undefined) {\n    return <Loading />;\n  }\n  return (\n    <section className=\"cards-section\">\n      {movies.map((movie) => (\n        <MovieCard movie={movie} key={movie.id} />\n      ))}\n      <div className=\"paginator\">\n        <Pagination\n          onChange={handlePageClick}\n          currentPage={page}\n          total={totalPages}\n          hideOnSinglePage={true}\n        />\n        <br />\n      </div>\n    </section>\n  );\n};\n\nconst MovieCard = ({ movie: { id, title, poster_path } }) => (\n  <Link to={`/movie/${id}`}>\n    <Card\n      hoverable\n      style={{ width: 240 }}\n      className=\"card\"\n      cover={<img alt=\"example\" src={`${IMAGE_PATH}${poster_path}`} />}\n      actions={[<PlusCircleOutlined className=\"__icon\" key=\"plus\" />]}\n    >\n      <Meta title={title} />\n    </Card>\n  </Link>\n);\n\nexport default CardsMovies;\n","import { URL_API, API_KEY } from \"../utils/constants\";\nimport CardsMovies from \"../components/CardsMovies/CardsMovies\";\nimport { Typography } from \"antd\";\nimport './secondary_page.sass';\nconst { Title } = Typography;\n\n\nconst Popular = () => {\n  const url = `${URL_API}/movie/popular${API_KEY}&languaje=es-ES`;\n  return (\n    <div className=\"page\">\n      <Title className=\"__title\">Películas Populares</Title>\n      <CardsMovies url={url} />\n    </div>\n  );\n};\n\nexport default Popular;\n","import \"./secondary_page.sass\";\nimport { useState, useEffect } from \"react\";\nimport CardsMovies from \"../components/CardsMovies/CardsMovies\";\nimport { URL_API, API_KEY } from \"../utils/constants\";\nimport { Input, Typography } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nconst { Title } = Typography;\n\nconst Search = () => {\n  const [currentSearch, setCurrentSearch] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (currentSearch !== \"\") {\n        setUrl(`${URL_API}/search/movie${API_KEY}&languaje=es-ES&query=${currentSearch}`);\n      }\n    }, 2000);\n  }, [currentSearch]);\n\n  const handlerOnChange = (input) => setCurrentSearch(input.target.value);\n\n  return (\n    <div className=\"page\">\n      <Title className=\"__title\">Busca una película</Title>\n      <Input\n        prefix={<SearchOutlined />}\n        placeholder=\"Ingresá el nombre\"\n        onChange={handlerOnChange}\n        className=\"input-search\"\n        size=\"large\"\n      />\n      <CardsMovies url={url} />\n    </div>\n  );\n};\n\nexport default Search;\n","// Imports from dependencies\nimport { useState, useEffect } from \"react\";\nimport { Modal } from \"antd\";\n// https://cookpete.com/react-player/ to modify the react-player\nimport ReactPlayer from \"react-player\";\n\n// Internal Imports\nimport \"./ModalVideo.sass\";\n\nconst ModalVideo = ({ videoKey, videoPlatform, isOpen, close }) => {\n  const [urlVideo, setUrlVideo] = useState(null);\n  useEffect(() => {\n    switch (videoPlatform) {\n      case \"YouTube\":\n        setUrlVideo(`https://youtu.be/${videoKey}`);\n        break;\n      case \"Vimeo\":\n        setUrlVideo(`https://vimeo.com/${videoKey}`);\n        break;\n      default:\n        break;\n    }\n  }, [videoPlatform, videoKey]);\n  return (\n    <Modal\n      className=\"modal-video\"\n      visible={isOpen}\n      centered\n      onCancel={close}\n      footer={false}\n    >\n      <ReactPlayer url={urlVideo} controls muted />\n    </Modal>\n  );\n};\n\nexport default ModalVideo;\n","// Imports from dependencies\nimport { useParams } from \"react-router-dom\";\nimport { Col, Row, Button, Layout } from \"antd\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { PlaySquareOutlined } from \"@ant-design/icons\";\n\n// Internal imports\nimport useFetch from \"../../hooks/useFetch\";\nimport \"./movie.sass\";\nimport Loading from \"../../components/Loading\";\nimport { URL_API, API_KEY, IMAGE_PATH } from \"../../utils/constants\";\nimport ModalVideo from \"../../components/ModalVideo/ModalVideo\";\n\nconst Movie = () => {\n  const { id } = useParams();\n  const urlData = `${URL_API}/movie/${id}${API_KEY}&language=es-ES`;\n  const urlVideo = `${URL_API}/movie/${id}/videos${API_KEY}&language=en-EN`;\n  const movieData = useFetch(urlData);\n  const movieVideo = useFetch(urlVideo);\n\n  if (movieData.loading || !movieData.result || !movieVideo.result) {\n    return <Loading />;\n  }\n  if (movieVideo.result.results.length > 0) {\n    const {\n      result: {\n        results: [videoData],\n      },\n    } = movieVideo;\n    return <RenderMovie movieData={movieData} videoData={videoData} />;\n  } else {\n    return (\n      <h1 className=\"provisory-title\">No encontramos datos de esa película</h1>\n    );\n  }\n};\n\nconst RenderMovie = ({ movieData: { result }, videoData }) => (\n  <div\n    className=\"movie\"\n    style={{ backgroundImage: `url('${IMAGE_PATH + result.backdrop_path}')` }}\n  >\n\n      <Row className=\"movie__dark\">\n        <Col xs={18} sm={18} md={8} offset={3} className=\"movie__poster\">\n          <PosterMovie image={IMAGE_PATH + result.poster_path} />\n        </Col>\n        <Col xs={24} sm={12} md={10} className=\"movie__info\">\n          <InfoMovie result={result} videoData={videoData} />\n        </Col>\n      </Row>\n  </div>\n);\n\nconst PosterMovie = ({ image }) => (\n  <div style={{ backgroundImage: `url('${image}')` }}></div>\n);\n\nconst InfoMovie = ({\n  result: { title, release_date, genres, overview },\n  videoData: { key, site },\n}) => {\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const openModal = () => setIsVisibleModal(true);\n  const closeModal = () => setIsVisibleModal(false);\n\n  const renderVideo = () => {\n    if (key && site) {\n      return (\n        <div>\n          <Button\n            className=\"info__button\"\n            type=\"primary\"\n            icon={<PlaySquareOutlined />}\n            onClick={openModal}\n          >\n            Ver Trailer\n          </Button>\n          <ModalVideo\n            videoKey={key}\n            videoPlatform={site}\n            isOpen={isVisibleModal}\n            close={closeModal}\n          />\n        </div>\n      );\n    }\n  };\n  return (\n    <div className=\"info\">\n      <div>\n        <h1 className=\"info__mainTitle\">\n          {title}\n          <span> ~ {moment(release_date, \"YYYY-MM-DD\").format(\"YYYY\")}</span>\n        </h1>\n        {renderVideo()}\n      </div>\n      <div>\n        <h3 className=\"info__subTitle\">General</h3>\n        <p className=\"info__description\">{overview}</p>\n        <h3 className=\"info__subTitle\">Generos</h3>\n        <ul className=\"info__genres\">\n          {genres.map((genre) => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Movie;\n","import { URL_API, API_KEY } from \"../utils/constants\";\nimport { Typography } from \"antd\";\nimport CardsMovies from \"../components/CardsMovies/CardsMovies\";\nimport './secondary_page.sass';\n\nconst { Title } = Typography;\n\nconst NewMovies = () => {\n  const url = `${URL_API}/movie/now_playing${API_KEY}&languaje=es-ES`;\n  return (\n    <div className=\"page\">\n      <Title className=\"__title\">Últimos Lanzamientos</Title>\n      <CardsMovies url={url} />\n    </div>\n  );\n};\n\nexport default NewMovies;\n","export default __webpack_public_path__ + \"static/media/popcorn_m.48b6f34e.png\";","import \"./MenuTop.sass\";\nimport { Link } from \"react-router-dom\";\nimport { Menu } from \"antd\";\nimport logo from \"../../assets/popcorn_m.png\";\n\nconst MenuTop = () => {\n  return (\n    <div className=\"menu-top\">\n      <div className=\"menu-top__logo\">\n        <img src={logo} alt=\"popcorn\" />\n      </div>\n      <Menu\n        theme=\"dark\"\n        mode=\"horizontal\"\n        defaultSelectedKeys={['1']}\n        style={{lineHeight:\"64px\"}}\n      >\n          <Menu.Item key=\"1\" className=\"menu-top__item\">\n              <Link to=\"/movies-app\">Home</Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\" className=\"menu-top__item\">\n              <Link to=\"/new-movies\">Películas nuevas</Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\" className=\"menu-top__item\">\n              <Link to=\"/popular\">Más populares</Link>\n          </Menu.Item>\n          <Menu.Item key=\"4\" className=\"menu-top__item\">\n              <Link to=\"/search\">Buscar</Link>\n          </Menu.Item>\n      </Menu>\n    </div>\n  );\n};\n\nexport default MenuTop;\n","import \"./Footer.sass\";\nimport { Layout } from \"antd\";\n\nconst Footer = () => {\n  const { Footer } = Layout;\n\n  return (<Footer className=\"footer\">\n    <p>🎞️ Movie app by Melina Cantamutto 🎥</p>\n  </Footer>);\n};\n\nexport default Footer;\n","// Importing LIBRARIES\nimport { Layout } from \"antd\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Importing PAGES\nimport Home from \"./pages/home\";\nimport Error404 from \"./pages/error404\";\nimport Popular from \"./pages/popular\";\nimport Search from \"./pages/search\";\nimport Movie from \"./pages/movie\";\nimport NewMovies from \"./pages/new_movies\";\n\n// Importing COMPONENTS\nimport MenuTop from \"./components/MenuTop\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  const { Header, Content } = Layout;\n  return (\n    <Layout>\n      <Router className=\"main-container\">\n        <Header style={{zIndex: '1'}}>\n          <MenuTop></MenuTop>\n        </Header>\n        <Content>\n          <Switch>\n            <Route exact path=\"/movies-app\" component={Home} />\n            <Route exact path=\"/search\" component={Search} />\n            <Route exact path=\"/popular\" component={Popular} />\n            <Route exact path=\"/new-movies\" component={NewMovies} />\n            <Route exact path=\"/movie/:id\" component={Movie} />\n            <Route path=\"*\" component={Error404} />\n          </Switch>\n        </Content>\n        <Footer style={{zIndex: '1'}} />\n      </Router>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}